---
title: "Streaming VS Cine" 
date: 2022-12-23 #- ISO8601 YYYY-MM-DD format 
author: Sukhman Kaur, Juliet Allegra y Juan David
date-format: short
affiliation: Universidad de Valencia
format: 
  revealjs:
    transition: slide
    background-transition: fade
    scrollable: true
    slide-level: 2
    height: 900
    width: 1600
    toc: false
    center-title-slide: true
    title-slide-attributes: 
      data-background-color: "#91d0eb"
    preview-links: auto  #- true: abre un iframe en lugar de abrir ventana
    fontcolor: "#262d36"
    highlight-style: a11y
    code-line-numbers: true
    number-sections: false
    slide-number: c/t  
    incremental: false   
footer: |
  Slides hechas con [Quarto](https://quarto.org/) 
---

# Índice

1.  Introducción

2.  Datos

3.  Análisis de los ingresos

4.  Comparación entre los streaming servicios

5.  Conclusiones

## Datos

-   Los datos sobre los ingresos de Cine lo obtuvimos de [The Numbers](https://www.the-numbers.com/market/) que son basados en el mercado doméstico de cine.

-   Proseguimos a realizar un dataset sobre los ingresos de los streaming services.

    -   Los ingresos de [Netflix](https://www.macrotrends.net/stocks/charts/NFLX/netflix/revenue), [Hulu](https://www.businessofapps.com/data/hulu-statistics/), [Disney+](https://www.demandsage.com/disney-users/), [AmazonPrime](https://www.matthewwoodward.co.uk/work/amazon-prime-statistics/) que incluyen PrimeVideo, Audiobooks, Digital Musica, E-books y entre otros.

-   Y por último obtuvimos los datos de Streaming Service de un Dataset de [Kaggle](https://www.kaggle.com/code/wenyihsu/data-visualization-movie-recommendation/data) sobre películas de Netflix, PrimeVideo, Hulu y Disney+ con sus correspondientes calificaciones de IMDB y Rotten Tomatoes.

```{r,  echo =FALSE, results='hide', message=FALSE, warning=FALSE}

library(readxl)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(ggridges)
library(RColorBrewer)
library(gganimate)
library(ggthemes)
library(prettydoc)
library(gt) #install.packages("gt")
library(sjPlot)

#devtools::install_github('Mikata-Project/ggthemr')
library(ggthemr)

ggthemr("sky")

#Revenues de Cine  
D1 <- read_excel("./datos/datoscine.xlsx")

D1 = D1 %>% rename(ing_sin_inf = "INGRESOS AJUSTADOS INFLACION")

D1$INGRESOS <- as.numeric(gsub(",","",D1$INGRESOS))

```

## Análisis de los ingresos

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}

D1 <- read_excel("./datos/datoscine.xlsx")

D1 = D1 %>% rename(ing_sin_inf = "INGRESOS AJUSTADOS INFLACION")

D1$INGRESOS <- as.numeric(gsub(",","",D1$INGRESOS))


```

::: panel-tabset
### Evolución del cine segun sus ingresos

Los ingresos anuales de box office en su mayoria tiene una tendencia creciente, hasta que ocurre una fuerte caida.

```{r}
#| code-fold: true
d1a <- D1 %>% 
  select("YEAR","INGRESOS")

p1 <- ggplot(d1a, aes(x=YEAR, y=INGRESOS)) + 
  geom_line() +
  geom_point(shape=21, size=2) + labs(title = "Ingresos anuales box office de Norte America en dolares", subtitle = "(1995-2022)", caption = "Fuente: Nash information services LLC") +
  scale_x_continuous("Año", limits = c(1995, 2022)) + 
  scale_y_continuous("Ingresos", labels = scales::dollar) +  theme(legend.position = "top")
p1

```

### Evolución de los streaming services segun sus ingresos

Los ingresos anuales de los streaming services tienen una tendencia creciente durante todo su periodo.

-   Los ingresos de Netflix y PrimeVideo son significativamente mayores al resto.
-   Es importante destacar que Disney+ es relativamente nuevo

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
D2 <- read_excel("./datos/Streamingrevenues.xlsx", sheet = "SVOD")

data_1 <- data.frame(
  year  = c(2009,2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021),  
  Netflix = c(1670000000,	2163000000,	3205000000,	3609000000,	4375000000,	5505000000,	6780000000,	8831000000,	11693000000,	15794000000,	20156000000,	24996000000,	29698000000), 
  Disney = c(NA,	NA,	NA,	NA,	NA,	NA,	NA,	NA,	NA,	NA, NA,	2802000000,	5293000000),
  Prime= c(NA,	NA,	NA,	NA,	NA,	2760000000,	4470000000,	6390000000,	9720000000,	14170000000,	19210000000,	25210000000,	31770000000),
  Hulu= c( NA,	200000000,	400000000,	600000000,	1100000000,	1600000000,	2000000000,	2400000000,	3100000000,	3500000000,	4500000000,	7200000000,	9600000000))
str(data_1)

data_wide <- data_1

data_long <- data_wide %>% 
  tidyr::pivot_longer(cols = 2:5, names_to = "SOV")


p2 <- ggplot(data_long, aes(x=year, y=value, color= SOV)) +
  geom_line() +
  geom_point(shape=21, size=2) +
  labs(title = "Ingresos anuales de streaming services en dolares", subtitle = "(2009-2021)", caption = "Fuente: Kaggle dataset by RUCHI BHATIA") +
  scale_x_continuous("Año", limits = c(2009, 2021)) + 
  scale_y_continuous("Ingresos", labels = scales::dollar) +  theme(legend.position = "top")
p2

```

### Comparación de ingresos anuales, SVOD VS Cine

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}

data3_a = d1a %>% rename(year = YEAR, value = INGRESOS) %>%
  mutate(SOV = "cine")

Data_1y2 <- full_join(data3_a,data_long, by= c("SOV", "year" = "year", "value" = "value")) 

p_ambos = ggplot(Data_1y2, aes(x=year, y=value, color= SOV)) +
  geom_line() +
  geom_point(shape=21, size=2) + labs(title = "Comparacion de ingresos anuales, SVOD VS Cine", subtitle = "(1995-2021)", caption = "Fuente: Kaggle dataset by RUCHI BHATIA & Nash information services LLC")+
  scale_x_continuous("Año", limits = c(2009, 2021)) + 
  scale_y_continuous("Ingresos", labels = scales::dollar)+  theme(legend.position = "top") + transition_reveal(year) 
p_ambos

animate(p_ambos, duration = 8, fps = 20, width = 500, height = 500, renderer = gifski_renderer())
anim_save("output.gif")


sum_de_streaming = data_1 %>% rowwise() %>% 
  mutate(value = sum(Netflix, Disney, Prime, Hulu, na.rm = TRUE)) %>%
  mutate(SOV = "streaming")
view(sum_de_streaming)
cine_y_sumStreaming = full_join(data3_a, sum_de_streaming, by= c("SOV", "year" = "year", "value" = "value"))

pp_ambos = ggplot(cine_y_sumStreaming, aes(x=year, y=value, color= SOV)) + geom_line() +  geom_point(shape=21, size=2) + labs(title = "Comparacion de ingresos anuales, SVOD VS Cine", subtitle = "(1995-2021)", caption = "Fuente: Kaggle dataset by RUCHI BHATIA & Nash information services LLC") + theme(legend.position = "top") + transition_reveal(year) 
  pp_ambos

animate(pp_ambos, duration = 8, fps = 20, width = 500, height = 500, renderer = gifski_renderer())
anim_save("output2.gif")

```

![](output.gif){fig-align="left"}

![](output2.gif){fig-align="right"}

Los resultados de la comparación de cine y streaming services son contundente para el cine - En el 2017, los ingresos de Netflix ya eran superiores a los ingresos de cine. - Tras la pandemia de Covid-19 todos los ingresos de los streaming services son mayores que el cine.
:::

## Comparación entre los Streaming Services

::: panel-tabset
### Comparación entre la cantidad de peliculas según cada SVOD

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
Streaming_full <- read.csv(file = 'datos/MoviesOnStreamingPlatforms.csv')
 
 Streaming_full_separado <- Streaming_full %>% separate(col = Rotten.Tomatoes, 
                                                        into = c("score", "borrar"),
                                                        sep  = "/") %>% select(-borrar) 
 
 Streaming_full_separado$score <- as.numeric(Streaming_full_separado$score) 
 
 Streaming_full_separado = Streaming_full_separado %>% drop_na() %>% mutate(servicio = ifelse(Netflix == 1, "netflix",
                                                                                ifelse(Hulu == 1, "hulu",
                                                                                       ifelse(Prime.Video == 1, "prime",
                                                                                              ifelse(Disney. == 1, "disney", "ups")))))  
 
 ##ojala_cero = Streaming_full_separado %>% filter(servicio == "ups")
#prueba = dplyr::count(iris, Species, wt = Sepal.Length)

cantidad_de_peliculas =  Streaming_full_separado %>% count(servicio, name = "cantidad")


cantidad_de_peliculas_plot = cantidad_de_peliculas %>% ggplot(aes(x=servicio, y=cantidad, fill= cantidad)) + 
  geom_bar(stat = "identity") +
  labs(title = "Cantidad de peliculas segun cada SVOD", subtitle = "(2009-2021)", caption = "Fuente: Kaggle dataset by RUCHI BHATIA") +  theme()
cantidad_de_peliculas_plot


```

Netflix y PrimeVideo tiene un numero mucho mayor que Disney y Hulu. Netflix y PrimeVideo están disponible en más países que otros servicios de streaming.

### Comparación entre la cantidad de peliculas por genero de cada SVOD

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
datos_completicos <- read.csv(file = 'datos/movies_updated.csv')
para_comparargeneros = datos_completicos %>% drop_na() %>% mutate(servicio = ifelse(Netflix == 1, "netflix",
                                                                                ifelse(Hulu == 1, "hulu",
                                                                                       ifelse(Prime.Video == 1, "prime",
                                                                                              ifelse(Disney. == 1, "disney", "ups"))))) %>%
  select(ID,Title,Genres, servicio) 
para_comparargeneros = para_comparargeneros %>% separate(col = Genres, 
                                                         into = c("g1","g2","g3","g4","g5"),
                                                         sep  = ",")
gg1 = para_comparargeneros[ , c("servicio","g1")] 
gg2 = para_comparargeneros[ , c("servicio","g2")] %>% rename("g1" = "g2")
gg3 = para_comparargeneros[ , c("servicio","g3")]%>% rename("g1" = "g3")
gg4 = para_comparargeneros[ , c("servicio","g4")]%>% rename("g1" = "g4")
gg5 = para_comparargeneros[ , c("servicio","g5")]%>% rename("g1" = "g5")

gg1 = gg1 %>% bind_rows(gg1, gg2) %>% bind_rows(gg1, gg3) %>% bind_rows(gg1, gg4) %>% bind_rows(gg1, gg5) %>% drop_na()

solo_nesflis = gg1 %>% filter(servicio == "netflix")
plott_netflix= solo_nesflis %>% ggplot(aes(g1)) + geom_bar() + labs(title = "Netflix") +  coord_flip() 


solo_disney = gg1 %>% filter(servicio == "disney")

plott_disney = solo_disney %>% ggplot(aes(g1)) + geom_bar() + labs(title = "Disney")+  coord_flip()

solo_hulu = gg1 %>% filter(servicio == "hulu")

plott_hulu = solo_hulu %>% ggplot(aes(g1)) + geom_bar() +  labs(title = "Hulu") +  coord_flip()

solo_prime = gg1 %>% filter(servicio == "prime")

plott_prime = solo_prime %>% ggplot(aes(g1)) + geom_bar() + labs(title = "PrimeVideo") +  coord_flip() 

options(repr.plot.width = 6, repr.plot.height =3)
grid.arrange(plott_netflix, plott_disney, plott_hulu , plott_prime, ncol = 4)

    
prueba = gg1 %>% group_by(servicio) %>% na.omit() %>% filter(!g1 %in% c(""))  %>% count(g1) 

options(scipen=999)
generos_para_regresion = prueba %>%group_by(servicio) %>% mutate(n_porcentaje = n/sum(n))
generos_para_regresion$servicio <- as.factor(generos_para_regresion$servicio)

generos_para_regresion_n  = generos_para_regresion %>% pivot_wider(names_from = g1, values_from = n, id_cols = servicio)
generos_para_regresion_porcentaje = generos_para_regresion %>% pivot_wider(names_from = g1, values_from = n_porcentaje, id_cols = servicio)



```

Observamos que los géneros de comedia y drama son lideres. Los resto de géneros muestran resultados significativos menores al género de comedia y drama.
:::

## Comparación de cada Streaming Service según sus Scores

::: panel-tabset
### Rotten Tomatoes

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
Streaming_full_separado_2 = Streaming_full_separado %>% drop_na() %>% group_by(servicio) %>% summarise(avg = mean(score))

Streaming_full_separado_2_plot = Streaming_full_separado_2 %>% ggplot(aes(x=servicio, y=avg, fill= avg)) + geom_bar(stat = "identity") + labs(title = "Comparacion dentro de cada  SVOD segun su Rotten Tomatoes score", subtitle = "(2009-2021)", caption = "Fuente: Kaggle dataset by RUCHI BHATIA") +  theme()

Streaming_full_separado_2_plot

```

Hulu que tiene el menor número de películas, ofrece la mejor calidad de películas según Rotten Tomatoes. Por el contrario, la calidad de las películas de Prime Video está por debajo de la media según esta clasificación .

### IMDb

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
datos_imbd = read.csv(file = 'datos/movies_updated.csv') 
view(datos_imbd)
datos_imbd = datos_imbd %>% drop_na() %>% mutate(servicio = ifelse(Netflix == 1, "netflix",
                                                                                            ifelse(Hulu == 1, "hulu",
                                                                                                   ifelse(Prime.Video == 1, "prime",
                                                                                                          ifelse(Disney. == 1, "disney", "ups"))))) %>% select(Title, servicio, IMDb)
datos_imbd_regresion = datos_imbd %>% group_by(servicio) %>% summarise(avg_IMDb = mean(IMDb))


IMDb_plot = datos_imbd_regresion %>% ggplot(aes(x=servicio, y=avg_IMDb, fill= avg_IMDb)) + 
  geom_bar(stat = "identity")+ labs(title = "Comparacion dentro de cada  SVOD segun su IMDb score", subtitle = "(2009-2021)", caption = "Fuente: Kaggle dataset by RUCHI BHATIA") +  theme()

IMDb_plot 

```

En comparación con Rotten Tomatoes Disney ofrece la mejor calidad de películas. Luego, Netflix y Hulu.
:::

## Distribuciones

::: panel-tabset
### Charts de distribución age y year

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
para_distribuciones = Streaming_full %>% drop_na() %>% mutate(servicio = ifelse(Netflix == 1, "netflix",
                                                                               ifelse(Hulu == 1, "hulu",
                                                                              ifelse(Prime.Video == 1, "prime",
                                                                                  ifelse(Disney. == 1, "disney", "ups"))))) %>%
                                                       select(ID,Title,Year,Age, servicio) 

para_distribuciones$Age <- ifelse(para_distribuciones$Age=="", 0, para_distribuciones$Age)
para_distribuciones$Age <- ifelse(para_distribuciones$Age=="all", 0, para_distribuciones$Age)
para_distribuciones$Age = as.numeric(gsub("\\+", "", para_distribuciones$Age))


#bruta distribucion de numero de movies por age 
#p <- para_distribuciones %>% ggplot(aes(Age)) + geom_bar() + facet_wrap(vars(servicio), nrow = 2, ncol = 2)  p

# ajustado a tamaño distribucion de numero de movies por age 
segundo_age = para_distribuciones %>% group_by(servicio) %>% count(Age)

segundo_age_hulu = segundo_age %>% filter(servicio == "hulu") %>% ungroup() %>% mutate(porcentaje = n/sum(n)) 

segundo_age_disney = segundo_age %>% filter(servicio == "disney") %>% ungroup() %>% mutate(porcentaje = n/sum(n))

segundo_age_netflix = segundo_age %>% filter(servicio == "netflix") %>% ungroup() %>% mutate(porcentaje = n/sum(n))

segundo_age_prime = segundo_age %>% filter(servicio == "prime") %>% ungroup() %>% mutate(porcentaje = n/sum(n))


plot_hulu = ggplot(data=segundo_age_hulu , aes(x=Age, y=porcentaje)) +
  geom_bar(stat="identity") + labs(title = "Hulu")

plot_disney = ggplot(data=segundo_age_disney , aes(x=Age, y=porcentaje)) +
  geom_bar(stat="identity")+ labs(title = "Disney")

plot_netflix = ggplot(data=segundo_age_netflix, aes(x=Age, y=porcentaje)) +
  geom_bar(stat="identity") + labs(title = "Netflix")

plot_prime = ggplot(data=segundo_age_prime, aes(x=Age, y=porcentaje)) +
  geom_bar(stat="identity")+ labs(title = "PrimeVideo")

plot_las4distribuciones = grid.arrange(plot_hulu, plot_disney, plot_netflix, plot_prime) + theme()
plot_las4distribuciones 


```

El cero quiere decir es para todo público y podemos observar que todos tienen una alta cantidad de películas apta para todo público. En segundo lugar, número más alto disponible es para los jóvenes adultos y adultos.\
Disney+ ofrezca un mayor enfoque en los niños.

### Densidad

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
#despues gemom density todo junto
plot_distribucionesjuntas = ggplot(segundo_age, aes(Age, servicio)) + geom_density_ridges(aes(fill = servicio), alpha = 0.5)
plot_distribucionesjuntas

```
:::

## Comparaciones entre plataformas

### Según el año de estreno por película

::: panel-tabset
### Distribución

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
#p2 <- para_distribuciones %>% ggplot(aes(Year)) + geom_bar() + facet_wrap(vars(servicio), nrow = 2, ncol = 2)  p2

segundo_year = para_distribuciones %>% group_by(servicio) %>% count(Year)

segundo_year_hulu = segundo_year %>% filter(servicio == "hulu") %>% ungroup() %>% mutate(porcentaje = n/sum(n))
#------
segundo_year_disney = segundo_year %>% filter(servicio == "disney") %>% ungroup() %>% mutate(porcentaje = n/sum(n))

segundo_year_netflix = segundo_year %>% filter(servicio == "netflix") %>% ungroup() %>% mutate(porcentaje = n/sum(n))

segundo_year_prime = segundo_year %>% filter(servicio == "prime") %>% ungroup() %>% mutate(porcentaje = n/sum(n))


plot_hulu2 = ggplot(data=segundo_year_hulu , aes(x=Year, y=porcentaje)) +
  geom_bar(stat="identity") + labs(title = "Hulu")

plot_disney2 = ggplot(data=segundo_year_disney , aes(x=Year, y=porcentaje)) +
  geom_bar(stat="identity") + labs(title = "Disney")

plot_netflix2 = ggplot(data=segundo_year_netflix, aes(x=Year, y=porcentaje)) +
  geom_bar(stat="identity") + labs(title = "Netflix")

plot_prime2 = ggplot(data=segundo_year_prime, aes(x=Year, y=porcentaje)) +
  geom_bar(stat="identity") + labs(title = "PrimeVideo")

plot_las4distribuciones2 = grid.arrange(plot_hulu2, plot_disney2, plot_netflix2, plot_prime2) + theme()
plot_las4distribuciones

```

### Densidad

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
plot_distribucionesjuntas2 = ggplot(segundo_year, aes(Year, servicio)) + geom_density_ridges(aes(fill = servicio), alpha = 0.5)
plot_distribucionesjuntas2

```
:::

La comparación ilustra que Prime Video posee un catálogo más extenso según el año de estreno por película. Disney+ igual presta un amplio catálogo de películas que extienden un extenso periodo de tiempo. Ambas poseen una variedad de peliculas estrenadas desde 1930 a 2022. En cambio, Hulu y Netflix ofrecen películas con años de estreno más recientes, especifico estrenos de los años 2000-2020.

## Regresión

Realizamos una regresión entre los streaming services y sus respectivas calificaciones según Rotten Tomatoes y IMDb. El resultado de 0.498 significa que el modelo explica el 50% de la variabilidad de los datos de respuesta en torno a su media. Entonces el modelo explicar aproximadamente la mitad de la variación observada. Además, hay que tomar en cuenta que su valor de p indica una relación débil y poco significante.

::: panel-tabset
#### Muestra de que tanto influye el rating de una película en una plataforma sobre la otra

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}

datos_completicos <- read.csv(file = 'datos/movies_updated.csv')
para_comparargeneros = datos_completicos %>% drop_na() %>% mutate(servicio = ifelse(Netflix == 1, "netflix",
                                                                                    ifelse(Hulu == 1, "hulu",
                                                                                           ifelse(Prime.Video == 1, "prime",
                                                                                                  ifelse(Disney. == 1, "disney", "ups"))))) %>%
  select(ID,Title,Genres, servicio) 
para_comparargeneros = para_comparargeneros %>% separate(col = Genres, 
                                                         into = c("g1","g2","g3","g4","g5"),
                                                         sep  = ",")
gg1 = para_comparargeneros[ , c("servicio","g1")] 
gg2 = para_comparargeneros[ , c("servicio","g2")] %>% rename("g1" = "g2")
gg3 = para_comparargeneros[ , c("servicio","g3")]%>% rename("g1" = "g3")
gg4 = para_comparargeneros[ , c("servicio","g4")]%>% rename("g1" = "g4")
gg5 = para_comparargeneros[ , c("servicio","g5")]%>% rename("g1" = "g5")

gg1 = gg1 %>% bind_rows(gg1, gg2) %>% bind_rows(gg1, gg3) %>% bind_rows(gg1, gg4) %>% bind_rows(gg1, gg5) %>% drop_na()
prueba = gg1 %>% group_by(servicio) %>% na.omit() %>% filter(!g1 %in% c(""))  %>% count(g1) 

options(scipen=999)
generos_para_regresion = prueba %>%group_by(servicio) %>% mutate(n_porcentaje = n/sum(n))
generos_para_regresion$servicio <- as.factor(generos_para_regresion$servicio)

generos_para_regresion_n  = generos_para_regresion %>% pivot_wider(names_from = g1, values_from = n, id_cols = servicio)
generos_para_regresion_porcentaje = generos_para_regresion %>% pivot_wider(names_from = g1, values_from = n_porcentaje, id_cols = servicio)
#Regression analysis
dedos <- read_excel("./datos/Streamingrevenues.xlsx", sheet = "SVOD") #ingresos con años #incluir ingresos año pasado como variable explicativa

ingressos_2021 = dedos %>% select("YEAR","2021") %>% mutate(servicio = tolower(YEAR), .before = YEAR) %>% select(-YEAR) %>%
  rename("beneficios_2021" = "2021")
ingressos_2020 = dedos %>% select("YEAR","2020") %>% mutate(servicio = tolower(YEAR), .before = YEAR) %>% select(-YEAR) %>%
  rename("beneficios_2020" = "2020") 
view(cantidad_de_peliculas)

cantidad_de_peliculas <- cantidad_de_peliculas %>% rename(cantidad_de_movies = cantidad)

#.------------------------------------------#esta hacerla mean de rt y imbd#.------------------------------------------
datos_imbd_paraRT = datos_imbd %>% group_by(servicio) %>% summarise(peliz_imbd_adj = sum(IMDb)) 

cantidad_de_peliculas_ajustadoRT = Streaming_full_separado %>%  group_by(servicio) %>% summarise(sum = sum(score))


cantidad_de_peliculas_ajustadoRT = cantidad_de_peliculas_ajustadoRT %>% rename(pelis_multiplicadopor_rt = sum)

q_peliculas_ajustado_calidad = full_join(datos_imbd_paraRT,cantidad_de_peliculas_ajustadoRT) %>%
  mutate(IMDB_nuevo = peliz_imbd_adj *10)
view(q_peliculas_ajustado_calidad)

q_peliculas_ajustado_calidad = q_peliculas_ajustado_calidad %>%
  mutate(q_movies_concalidad = (IMDB_nuevo + pelis_multiplicadopor_rt)/2 ) 
pelis_con_calidad = q_peliculas_ajustado_calidad %>% select(-IMDB_nuevo) %>% select(-pelis_multiplicadopor_rt)



#.------------------------------------------#.------------------------------------------#.------------------------------------------
RT_avg = Streaming_full_separado_2 %>% rename(avg_rt = avg)
generos_para_regresion_porcentaje #generos en porcentaje 
datos_imbd_regresion #IMDb avg

regrexx = full_join(ingressos_2021,ingressos_2020)
regrexx = full_join(regrexx,cantidad_de_peliculas)
regrexx = full_join(regrexx,pelis_con_calidad)
regrexx = full_join(regrexx,datos_imbd_regresion)
regrexx = full_join(regrexx,RT_avg)

regrexx_con_generos = full_join(regrexx, generos_para_regresion_porcentaje)

DT::datatable(regrexx_con_generos)

```

![](tabla_1.jpg){fig-align="center"}

#### La regresion mala

Laregresion mala da NA y Nan por relación lineal entre las variables explicativas

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
regrexx_malo_por_relacionlineal = lm(beneficios_2021 ~ beneficios_2020 + cantidad_de_movies + q_movies_concalidad + avg_IMDb + avg_rt, data=regrexx)
summary(regrexx_malo_por_relacionlineal) 
tab_model(regrexx_malo_por_relacionlineal)

```

![](regresion_mala_1.jpg){fig-align="center"}

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
regrexx_malo_por_relacionIMDB_Rt= lm(beneficios_2021 ~ beneficios_2020 + cantidad_de_movies + avg_IMDb + avg_rt, data=regrexx)

summary(regrexx_malo_por_relacionIMDB_Rt) 
tab_model(regrexx_malo_por_relacionIMDB_Rt)
```

![](regresion_mala.jpg){fig-align="center"}

#### La regresion buena

Esta intenta explicar los ingresos 2021 con las variables presentes.

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
regrexx_2 = regrexx %>% mutate(IMDB_2 = avg_IMDb*10) %>% mutate(avg_score = (avg_IMDb + avg_rt)/2) %>% select(-avg_IMDb) %>% 
  select(-avg_rt) %>% select(-q_movies_concalidad) %>% select(-IMDB_2)

regrexx_bueno = lm(beneficios_2021 ~ beneficios_2020 + cantidad_de_movies + avg_score , data=regrexx_2)
summary(regrexx_2)

summary(regrexx_bueno)
tab_model(regrexx_bueno)
```

![](regresion_bien.jpg){fig-align="center"}

```{r, echo =FALSE, results='hide', message=FALSE, warning=FALSE}
regrexx_ratingsRelations = lm(avg_IMDb ~ avg_rt, data = regrexx)
summary(regrexx_ratingsRelations) 
tab_model(regrexx_ratingsRelations)

```

![](regresion.jpg){fig-align="center"}
:::

## Conclusión

En conclusión negar que el streaming va a dominar el entretenimiento a nivel mundial en un futuro a muy corto plazo es negar lo evidente. Aunque quizás vivamos una época complicada para el cine, cada vez estas plataformas y sus producciones propias tienen menos que envidiar a las grandes productoras.

![](Cine-vs-streaming.jpg){fig-align="center" width="2580"}
